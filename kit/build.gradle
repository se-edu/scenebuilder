jar {
    baseName = 'scenebuilder-kit'
}

task kitJar(type: Jar, dependsOn: classes, description: 'Creates a jar for the SceneBuilder kit.') {
    baseName = 'scenebuilder-kit'
}

apply plugin: 'maven'

artifacts {
    archives kitJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            def repoUrl = getStringProperty('publishRepositoryUrl', 'http://nexus.gluonhq.com/nexus/content/repositories/releases/');
            def repoUser = getStringProperty('publishRepositoryUser', '');
            def repoPassword = getStringProperty('publishRepositoryPassword', '');
            snapshotRepository(url: 'http://nexus.gluonhq.com/nexus/content/repositories/snapshots/') {
                authentication userName: repoUser, password: repoPassword
            }
            repository(url: repoUrl) {
                authentication(userName: repoUser, password: repoPassword);
            }
            addFilter('scenebuilder-kit') { artifact, file ->
                artifact.name == 'scenebuilder-kit'
            }
            pom('scenebuilder-kit') {
                artifactId = 'scenebuilder-kit'
            }
        }
    }
}

private String getStringProperty(String name, String defaultValue) {
    if (!hasProperty(name)) {
        return defaultValue
    }

    def propertyValue = getProperty(name)
    return propertyValue != null ? propertyValue.toString().trim() : defaultValue
}
